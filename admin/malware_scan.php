<?php
// admin/malware_scan.php
session_start();
if (!isset($_SESSION['admin'])) {
    header("Location: login.php");
    exit();
}

/**
 * Simple Malware Scanner for PHP webroot
 * - Put this file inside your protected admin folder
 * - It will scan a target directory recursively for suspicious patterns
 * - It will NOT delete files automatically. You can quarantine (move) them.
 */

// ====== CONFIG ======
$root = realpath(__DIR__ . '/..'); // default: one level above admin (public_html)
$quarantineDir = __DIR__ . '/quarantine';
$allowedMaxFileSize = 5 * 1024 * 1024; // skip files > 5MB to avoid memory issues

// suspicious patterns (case-insensitive)
$patterns = [
    // common webshell / obfuscation / remote execution
    '/eval\s*\(/i',
    '/base64_decode\s*\(/i',
    '/gzinflate\s*\(/i',
    '/gzuncompress\s*\(/i',
    '/str_rot13\s*\(/i',
    '/shell_exec\s*\(/i',
    '/passthru\s*\(/i',
    '/system\s*\(/i',
    '/proc_open\s*\(/i',
    '/popen\s*\(/i',
    '/pcntl_exec\s*\(/i',
    '/assert\s*\(/i',
    '/preg_replace\s*\(\s*["\'].*\/e.*["\']/i', // /e modifier
    '/\$\_REQUEST\[/i',
    '/\$\_GET\[/i',
    '/\$\_POST\[/i',
    '/php:\/\/input/i',
    '/base64_encode\s*\(/i', // sometimes used in obf chains
    '/create_function\s*\(/i',
    '/eval\(\$/', // eval($something
];

// files to always scan (extensions)
$scanExtensions = ['php', 'phtml', 'phar', 'inc'];

// helper - human readable size
function hr($bytes) {
    if ($bytes < 1024) return $bytes . ' B';
    if ($bytes < 1024*1024) return round($bytes/1024,2).' KB';
    return round($bytes/(1024*1024),2).' MB';
}

// create quarantine folder if not exists
if (!is_dir($quarantineDir)) {
    mkdir($quarantineDir, 0755, true);
}

// handle quarantine action (POST)
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'quarantine' && isset($_POST['file'])) {
    $target = $_POST['file'];
    // sanitize path: must be inside root
    $real = realpath($target);
    if ($real === false || strpos($real, $root) !== 0) {
        $msg = "Path not allowed.";
    } else {
        $basename = basename($real);
        $time = date('Ymd_His');
        $newname = $quarantineDir . '/' . $time . '_' . preg_replace('/[^a-zA-Z0-9._-]/','_', $basename);
        if (@rename($real, $newname)) {
            $msg = "Berhasil memindahkan: {$basename} -> quarantine.";
            // write to log
            $log = "[".date('Y-m-d H:i:s')."] Quarantined: {$real} -> {$newname}\n";
            file_put_contents($quarantineDir . "/scan_report_{$time}.txt", $log, FILE_APPEND);
        } else {
            $msg = "Gagal memindahkan file. Periksa permission.";
        }
    }
}

// scan function
function scan_dir($dir, $root, $patterns, $scanExtensions, $maxFileSize) {
    $found = [];
    $rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir, FilesystemIterator::SKIP_DOTS));
    foreach ($rii as $file) {
        if (!$file->isFile()) continue;
        $path = $file->getPathname();
        $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION));

        // skip quarantine folder and node_modules, .git, vendor
        if (strpos($path, DIRECTORY_SEPARATOR . 'quarantine' . DIRECTORY_SEPARATOR) !== false) continue;
        if (preg_match('#/(?:\.git|node_modules|vendor)/#', $path)) continue;

        // skip very large files
        if ($file->getSize() > $maxFileSize) continue;

        // always inspect files with suspicious extensions OR any file containing '<?php'
        $contents = @file_get_contents($path);
        if ($contents === false) continue;

        $suspicious = false;
        // If extension is in list, run patterns
        if (in_array($ext, $scanExtensions) || stripos($contents, '<?php') !== false) {
            foreach ($patterns as $pat) {
                if (preg_match($pat, $contents)) {
                    $suspicious = true;
                    $reason = "Matched pattern: " . $pat;
                    break;
                }
            }
            // additional heuristics
            if (!$suspicious) {
                // many short one-line obfuscated files
                $lines = explode("\n", $contents);
                if (count($lines) <= 5 && strlen($contents) < 200 && preg_match('/[a-z0-9+\/=]{50,}/i', $contents)) {
                    $suspicious = true;
                    $reason = "Short obfuscated file with long base64-like string.";
                }
            }
        }

        // also flag if file is php inside upload folder
        if (!$suspicious) {
            $rel = substr($path, strlen($root));
            if (preg_match('#/uploads/#', str_replace('\\','/',$rel)) && $ext === 'php') {
                $suspicious = true;
                $reason = "PHP file inside uploads folder.";
            }
        }

        if ($suspicious) {
            $found[] = [
                'path' => $path,
                'size' => $file->getSize(),
                'modified' => date('Y-m-d H:i:s', $file->getMTime()),
                'reason' => $reason ?? 'Pattern matched'
            ];
        }
    }
    return $found;
}

// run scan
$results = [];
$scanTarget = $root; // default
if (isset($_GET['target']) && !empty($_GET['target'])) {
    $candidate = realpath($_GET['target']);
    if ($candidate !== false && strpos($candidate, $root) === 0) {
        $scanTarget = $candidate;
    }
}
$results = scan_dir($scanTarget, $root, $patterns, $scanExtensions, $allowedMaxFileSize);

?>
<!DOCTYPE html>
<html lang="id">
<head>
<meta charset="utf-8">
<title>Malware Scanner - Admin</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
.table-fixed { table-layout: fixed; word-wrap: break-word; }
code.small { font-size: 12px; }
</style>
</head>
<body class="bg-light">
<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center">
    <h3>Malware Scanner</h3>
    <div>
      <a href="dashboard.php" class="btn btn-secondary">‚Üê Dashboard</a>
      <a href="logout.php" class="btn btn-danger">Logout</a>
    </div>
  </div>

  <?php if (isset($msg)): ?>
    <div class="alert alert-info mt-3"><?= htmlspecialchars($msg) ?></div>
  <?php endif; ?>

  <div class="card mt-3">
    <div class="card-body">
      <form class="row g-2 mb-3" method="get">
        <div class="col-md-8">
          <label class="form-label">Target folder (optional)</label>
          <input type="text" name="target" class="form-control" placeholder="<?= htmlspecialchars($root) ?>" value="<?= isset($_GET['target']) ? htmlspecialchars($_GET['target']) : '' ?>">
          <small class="form-text text-muted">Kosong = scan seluruh website. Untuk lebih cepat, masukkan path spesifik seperti: <?= htmlspecialchars($root . '/uploads') ?></small>
        </div>
        <div class="col-md-4 align-self-end">
          <button class="btn btn-primary w-100">Scan Sekarang</button>
        </div>
      </form>

      <p>Ditemukan <strong><?= count($results) ?></strong> file mencurigakan.</p>

      <?php if (count($results) === 0): ?>
        <div class="alert alert-success">Tidak ditemukan indikasi malware pada area yang discan.</div>
      <?php else: ?>
        <table class="table table-bordered table-sm table-fixed">
          <thead class="table-dark">
            <tr>
              <th>File</th>
              <th>Ukuran</th>
              <th>Modified</th>
              <th>Alasan</th>
              <th>Aksi</th>
            </tr>
          </thead>
          <tbody>
            <?php foreach ($results as $r): ?>
              <tr>
                <td style="width:50%">
                  <code class="small"><?= htmlspecialchars($r['path']) ?></code>
                </td>
                <td style="width:10%"><?= hr($r['size']) ?></td>
                <td style="width:15%"><?= $r['modified'] ?></td>
                <td style="width:15%"><?= htmlspecialchars($r['reason']) ?></td>
                <td style="width:10%">
                  <form method="post" onsubmit="return confirm('Pindahkan file ini ke quarantine? (disarankan)');">
                    <input type="hidden" name="file" value="<?= htmlspecialchars($r['path']) ?>">
                    <input type="hidden" name="action" value="quarantine">
                    <button class="btn btn-sm btn-warning">Quarantine</button>
                  </form>
                </td>
              </tr>
            <?php endforeach; ?>
          </tbody>
        </table>

        <div class="alert alert-secondary">
          File yang dipindahkan akan disimpan di: <code><?= htmlspecialchars($quarantineDir) ?></code><br>
          Laporan dibuat otomatis setiap kali quarantine (<code>scan_report_TIMESTAMP.txt</code>).
        </div>
      <?php endif; ?>
    </div>
  </div>
</div>
</body>
</html>
